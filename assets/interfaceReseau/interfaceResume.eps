%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 582.000000 731.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.6 (Build 16G29) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 582 731
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 582 731
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: AnonymicePowerline
%!FontType1-1.0: AnonymicePowerline 1.0000.1.0020
14 dict begin/FontName /AnonymicePowerline def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /M put
dup 34 /a put
dup 35 /c put
dup 36 /h put
dup 37 /i put
dup 38 /n put
dup 39 /e put
dup 40 /space put
dup 41 /L put
dup 42 /u put
dup 43 /x put
dup 44 /C put
dup 45 /l put
dup 46 /s put
dup 47 /t put
dup 48 /r put
dup 49 /d put
dup 50 /p put
dup 51 /slash put
dup 52 /g put
dup 53 /D put
dup 54 /o put
dup 55 /k put
dup 56 /eacute put
dup 57 /underscore put
dup 58 /v put
dup 59 /one put
dup 60 /period put
dup 61 /J put
dup 62 /quoteright put
dup 63 /f put
dup 64 /q put
dup 65 /j put
dup 66 /m put
dup 67 /two put
dup 68 /b put
dup 69 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -232 1 index div -395 2 index div 1205 3 index div 1866 5 -1 roll div]cvx def
/sfnts [<





2BB01210B11006F4303101233533012227371E0133323E02351123352111140602E9BABAFE73F66269247556445C3517D3015CBD045EBBF95CCA484C5227486642032F75FC5CB4D700010031000003A20519000B0051B3040C05042BB00410B007D000B0004558B0062F1BB106153E59B0004558B0092F1BB109133E59B0004558B0002F1BB1000F3E59B0004558B0042F1BB1040F3E59B2080006111239B20A0006111239303121230107112311331101330103A2C3FE83A889890213C4FE2D01A29AFEF80519FC9501F6FE54000000000100BA000002E9051900090044B3080E02042BB00810B10308F4B00210B005D000B0004558B0062F1BB106153E59B0004558B0002F1BB1000F3E59B10206F4B00610B10406F4B00210B008D0B009D030312901353311233521113302E9FDD1D3D3015DD275042F75FB5C0000010000000003A403BA002100DAB0222FB015D0B0152FB00ADCB2EF0A015DB2400A015DB001DCB2EF01015DB24001015DB1000CF4B00A10B10908F4B01510B1140CF4B017D0B218150A111239B21C0A01111239B00010B023DC00B0004558B0162F1BB116133E59B0004558B01A2F1BB11A133E59B0004558B01E2F1BB11E133E59B0004558B0002F1BB1000F3E59B0004558B0092F1BB1090F3E59B0004558B0142F1BB1140F3E59B01E10B10506F4B4D905E905025D401B0805180528053805480558056805780588059805A805B805C8050D5DB00ED0B218001A111239B21C001A1112393031212311342623220615112311342623220E0215112311331536333217363332161503A48938354E498A3935313A210A89892B908931447C776F029E5058A494FDF2029E50583A5A6E36FDF203A4879D89898D8F00000100310000037303BA0013008EB0142FB0152FB000DCB10108F4B01410B00CD0B00C2FB10B0CF4B00ED0B20F0C0011123900B0004558B00D2F1BB10D133E59B0004558B0112F1BB111133E59B0004558B0002F1BB1000F3E59B0004558B00B2F1BB10B0F3E59B01110B10506F4B4D905E905025D401B0805180528053805480558056805780588059805A805B805C8050D5DB20F00111112393031212311342623220E021511231133151233201103738A6C794C7B562D898963FE0158023F7D8A46759752FE5E03A4EA0100FE85000002FFECFFE903BC03BA0013002700E2B0282FB0292FB000DCB02810B00AD0B00A2FB00010B1140CF4B4DA14EA14025D401B0914191429143914491459146914791489149914A914B914C9140D5DB00A10B11E0CF44017061E161E261E361E461E561E661E761E861E961EA61E0B5DB4B61EC61E025DB4D51EE51E025D00B0004558B00F2F1BB10F133E59B0004558B0052F1BB1050F3E59B00F10B11906F4B4D919E919025D401B08191819281938194819581968197819



00>] def
/CharStrings 39 dict dup begin
/.notdef 0 def
/space 1 def
/period 2 def
/slash 3 def
/one 4 def
/two 5 def
/three 6 def
/C 7 def
/D 8 def
/J 9 def
/L 10 def
/M 11 def
/underscore 12 def
/a 13 def
/b 14 def
/c 15 def
/d 16 def
/e 17 def
/f 18 def
/g 19 def
/h 20 def
/i 21 def
/j 22 def
/k 23 def
/l 24 def
/m 25 def
/n 26 def
/o 27 def
/p 28 def
/q 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/v 34 def
/x 35 def
/acute 36 def
/eacute 37 def
/quoteright 38 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-232 -395 1205 1866}def
/UniqueID 4254504 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE01FA39177E3711C4B4A11DAA0D658C0886515F35C2C446FCF535314172A4052246281FC7E60907A71D7D9F54AB13E13FC858EA01635508D1414ED02B320204893889691C914CE9F0611D2CF60725BFA988DB54C7721DCF7A8CACB959D0FE6F085E1D8006F2C182362540A71EB329CFCC90AF0BE5A19EFDBE36FA4E57CF52EBA74CCEF4AFA192B883C942AA46E23A9E63ACF11FFC43B38C0FA8469B51F725FC2F706BAC796091F6982F8224F3E57293036ECA83E3FCA5847C383C2E2D8C90F2F918CAED2008FDD063B180BFC922A59CA55A74C0E15E44BC0E6981E355077449EF3AB572656EB25641E30DB5BF36ABBD69506537E224BA18C3D18524A692E265E91AE82EDF30F73730DCD4ABE79C6410A909C75D26699E973A3208610301D9831D0C9C44B5B4F6BB57812EFB415ABD67687A3767B9F9171C6FEA87854277F22F43C50D4318DC76F13B3ECA93B4D278EBF27D314CD9A4926676269B27EA2EC0729DBF1C02FCB051F21F901991BB21522E5DF42F8144FD6A91FBC7272CF050E70F3C465A02C42384F56B64855B22D2644D7131826A50ECE2843504685F2062FD27E7AE67D824C6A7BF123FBA36DD1DDD5DC061CCEA2B6A5580242AE4F3888823E7613A3F135EED3C4F7A9F2CE4EF7D5EA345BC583AA62C7AAD3DD8DEE89FDF6E20F29AA2ED69527C733B68B76B15AEAB2E5F0A91F785ED805A44366CEE4608C29821E423BA36110FCC589AED75586169ED560146E409500AAB402FA81517D55F834893D0EA7180B355928902F8AC5356BA359306

EBC84FD17F5C4A76717B35A7EE677569C62E1562B9F1BE56F53DE6B87D882D283CC2B57B07364DCFE4803B9852096342736F1099DD8BD2FD9D84A4DA79D40658CE347F0898BE0256F818EEF861913851FFE45403B7EB443AAE5ECF293BE477A9633B96782BCB1A0838B22ACD391537BEC4AE5D71124775E546DA54726992351F1627789BC49E0BB7BC73240D1523525488232883CC555FEB1867C9C14EE5B19EBD0EBB069D8C6FDA82B0D887DBEDBDED2B22A44FDC5BC68FB615704CEDD7F3B61EBB8FFDFF333E38D9E1A2A3D0F089547CA57BA34BDB83EE755DF55CA422D7DF1357651D6796EF716D3E39E2A4382539B5610FBE469864EC392676C373AE40E93868AAAFE690B8CBEFC5EA9ECBB484A0B710C23FD9517F7EB33A74E3BFD1EE8183212F654A1837AA7FD9150CD590266D452A05E34432614B27EEBAE18F0B2D335E8829E1CB0B99B67191EF84278CC63150725E5FB243C7DDBCDAA816ED21FB491E75512F1F6142CB31660E6DEB8D0DD62C848ABF98329C63F969BEF531BC6E2CED5C058CB18435C1251144B133EBEDB0F6B7D59DB4327FEA3EB57FFBA3ABB9B2B1A606CAFAF245D8B704A3201BF6F582F86E71B8DB9D5111AF312D37A5753A7A5B48426990FC8D4F5FF553CF6A37781E36CC7A050E46ECA3F69D574230F07F748296CF35E48D4115A589F126735DE3211A91ABC88B299AEE5762029530442AA9B8DF6DF333372014C8E7210F5EB0FCBA65C9C481010BF3E4760DB549AB26983E6E3B74FDAA9BA40F7217F9CBADB946E8ECFC32128E27B4E68B228A619CF814B7431B5060AD1D0B00117A6C198D693528E73066D84E983A5969250A68C45BBFE73C06633EB03649F28858A3BE973378D5F9462DF6199334B4F76F0177E3E54BAA400F79892B40A5DCFA4A55755BC799D5C0CCC3A6F3369E6226112792ECAC7A2FCFD305EB3B0841473DE3DE638DDAD26011D139C6BDBB48364C7499A79D62817D734587FE1E48D19FD6D4D24D33799F8C6C21367084750BE95AE43C96630C01493A97A6C5494BA57AFB98DDF4BF833D6753E27853FAAA34CBF0D8915B08C896B97B839C0E3EF63B620D26C3459059ADFDF83B3191EDE6DEAB1AEABA582D9E59550E993B16593DF0E572F1D185A92025EAB596A071437AF3CFB0DD50C178D79B437E949CD432489EF3963A2380AE649172C431BC359BEEB95A651B2CF81CBFFBB1DA9C56C3375B6ACA8A6EDF259E92F1A0C13A739D000AFDEE370F1481E449FC1C5BFEB415B515BF442533F86E8E5B54579A99F0FD8EA90B00DDB325CE407B6D4B7DC054B49B4C99B6AC3F7C05C5E9B44FA9E8E469853ED50E00499A09A5DE2F837746A2F627D146CE359EB71C0C2D3447965B9E91715AD00C4EB0573F04C61529A2D822873E0769B51850D43DCEB499C06FED7E7E0C060182F14361A0918CC9A5
593E240D412DD1708828FAE6704C4DC2AFDE41AD80C35151EEAC65176E6FA29EF761B8A12D92DD3CF15337A36818B2479FA68C3E1E7A336806584598A6F03EC198E81659DD3D7D7E0C671195C10D4682B45C8FAC64DAED4D7519A9895FAD72DF35FE3756A1F0FF195957D7F20922C68C539F4A6A5540C51C3CB18F04F09FC184D40490B0A773848B0004128309A4A45DC409FB645CCFA6F8E9CCD6B0F26B2623F8C578614F0B58348036274E6ECF6B851536E2F60259BF45DF9C95758F8CB27A4E62CCED1B987211AAD01C7F6A48B902BE1287AC8755134E96547B5B83681580D8F7C347C90BE8DB33898E4D865EE5741ACF1E1BA92F46AA334A843C07CC2DC44F49BABEB239D9E352ED089FDA5FF11FB7A909683A7B0F6FE9D29790B83788A66A65594E388A46E19F3E0CCF2079A291EEE609E4EBA58BD60AE54A6178CE62130F6C267CAF099AD9CB1FB2CB2D4246FB017E966263C82734ED7789AB124479FE944F4E401E6124C50A495FEB0FECC8D03BBB6BADBF52DBE3AA3BD424B1B39084950E4F00A29E9088B9114C6FBA052AAFB57FFB3BE9A5C75DC1D4B17F410ED0AA843B2E1816FB4B2CFF16AAA2B713AD9A88665C9BA27EF470E1BBC185165393BC275F15CAC7DF2E6BD6A7EDA55C7BB515F438D4CD8C0A70B154E7742D0AB3B3BCC6EA9B6031D1DA541F8CAF6B504553CFE113059F0BFB314192635259865288F36FE0FAC8EB8548A4FDC2C82178BA6A35AE560D25572C24028B6D708AC52CBD76D63B540D0A29DDEC4971AA64F69BF4F7070D088982E473058292570467104EDAF7A877B9D5E791DC84E48AB20FEE30BA0D3213B48CC52525D7FFF281307788CA46B9CC3D814D3EB8B906734E8417C02F29AFB72782ACB736B355349635ACDD63505482FC34ABEE73B14C254D47373F927F15170AAD7F5924EC77E993045AA699D5542949FEB98E620AD73FA9019E378142A80203BFB95C58067CF996BD14A5FABBD736BF6CF9F481A602CFC25371F2866F6ECE7329B4CB08EC04DF3F222A27C2E345F6A2D95D43B4A94D870898EABA19FF8F4EA0F45756874D19BDF9B9996DAACA90DBD706DA0E98F9FCD321C62FD99AAE91F076F3AD093A39108E88AA622A9BF05A20D9D9EDC0F45E5AA6422A6AF4D34D33F8D05FDE6EDEF0F1E9F02E01C71712E3F86C9E57E2A7A2F0349C6DC44CC6B73BAB4292621DBE83A2D57C17A71C921B7684B29B2AFF5A940892890F14324266B34F172EABD8B8F0804576AE19A5E69EFA667D73ACE3EF984E678A76674C4178E960EFDF054CE7AF1AEF71CF83199AC8E2D6C751D2EC9CBF0051D5951E9B7FD4ABCC2CD0B89D0A74CFEADDBB52B7905DE6955AC45E9AFBF8E71B139D298B8B34E9A496AB51B5872E953793F89AB680F4F3D5AF40EAEBB7E2ECD0504F31AC77920071CCADC8F1595716E5C0F43947EE
A25ACD5DFE16A6E3FE61A1B4AAC38FC564A351897B8FE5FF8CA99D3A1AB202311025A5FBC99D87EA0974851905DC167DDDD05954D5049AFB0470F0C01ABB2E4EA2D0B20C5C627E205D89E49A9939071136929967DA34519CDFD567E35727BFC1978886271A53356588AA4A13A47761A9F3D2A988DB5044B5B50BE84C72F03772B0E36703B2B2A87CD80743C5AD9A33A11DFDC8B120BD7A498B316D9ABD0D8A9043C909A68F8599D26669D3F5826474B0340879D815B51AD51A3AAB3A340E85B6DB7737EDE77254D3A74BDAF6828A5CF72BCDF691C34C35E4CEEA16DF73ED951DA1488BFAD346256AF96B51731B6DA6E6D64BCB3DDFC96200C124C3AB867A5A9702A9AD6EA90AF5513AAB1F6FAC6D0F96094F63B4BABC5A3452FA65E4123833B4F9893B7F0CCC3368DD1FC70A219855C2267069A3F7D87C690531BEF7909D38C0238E99B431C82E87AD28BC926EAC6D8F82B9C2312A782E7C98514776A5B871B42272AFA4DD2556A61C873DE4D8C398771C80B0D1AEB25AA3814570B1695B174A512767EC3410CFE6C89319818E128CF4FEAF8B7A22F86AE315EC10FFC04DBBEFF43D3D0AE386E131E28F6271E01CD021CE4614B3F0DD972F80DD883B8AF4AA3BA6255FE20C6B35124059DD11D9E4CD94F1DAC1FCFF731619FBDFF7B3A8E1DCF1C021A8CA111C5903547830BEBDBEC0E647565C671BE37EC59796E823C6C92BF6DD5F5855AF4A17CF52268760483501990113254B494EA15BADE78F185C5549208787423278B499131B622D2C6BC2F9E787D1A3CC44890EBEBE0A298455A6E95A2180512EEE6857DDAC2586ED55B152DC5126389C01AC26BE7C4CB25334B3BDEA6E96E26EF1EB07F69B62B9EF073415FBAB45DAF65214F8F8D5BE38354ABFE54E27156B9FB6EA56A091D404D4180F98A2A10993BDF3D27C0091BBCE8C75AD2BF65ABE3284740A948933058180BEBD9BD5FCC33EE042067D1F8C43EDEFB73BF1B30028C8096B097B9DF43F5050D03720996945D6B35B40F510463F4C58D2A9E1F5FA19FE2B9E87452FBAB1C525AA0EA45B298961E7FBF01CD55099DB520ED7E721453D20BB596DEC0002165730EC9999111389BDCA5429CC550543EBE89D04F743B6258C12C6B7DB6105499765C358100BC2EF36BA2E44B344D5CF70D58F0994ECC9BCB327C81D24CABDDB8CE4050109F6A63806C351160E19A100DA5AC3F66058F7AB95E19865B1D4C774B1AB5815BCCBC28C0249D6157225F3DBBACB6F77776E5D4A0604B051136569F4498E993DB93967572017251795BCF45CECB33F50FF955DBFACFB993135E12021DBBC2A26A360A594EAC9DD75CC42531BEFAF3A2C31AE603036CE70065824F8A87451CFCFCC7A94FB9CB3CF2223CB0562E99228449A2C564E25DFD622E6EA79F85A39169CED8D64C634560A99B7BE223A7B9338A4DCD2
6F2D5EE3A64BF4D956D1A28ECA34D8D549327B9F945BC93E2909E8580EC2400F85AF6E9549D55AD6F86100B0380C68966FBEE8F0F6564A15344FB3BB27B01CC63466D20BC7A5667C3832D3299F1D49A27A99D4D8D1843B25D89A9F015031D96F1FD79496C9D9B6593AB20FD14FBFDB20EB633EB62DC43DA219BBC14322BD599B6992F274904D9D43B143E9FF4C60A6C724F8FD69D6C2A301B6A4347986973F7A54F6BCB10AA31DAD1B3013C4A7DDAB991A1B34D0746E1B48AB491E76FC554CCD48E89CA80C7B1FEAB13D5F65FBF6E7346929DB0463005B8C34EF88A4C31B57EC0C4C3FD4F8767BCC51F2EAF23992F58F43843ED8F81CD609FFC5FCE8C896FAB0438F4EE9AC7B86AD6A90561D16CB0304DBBC818A4578B95D3D25EA3489D8C0078EF1FB597BC045EF2A547ED40C8F6828DE1382E687E0B616442CC2C860CB61E988921A71832F4AD8670AAC70F73E258F645BB6DCEBBD78008B6EE8CF9ADF6B11D22B84952F5A79F9D8BCF3C6EB78953143F67A243FFAD3AB4DC99E8BBC75ABBF696B0E135F93A4B20B9D258D01A562164B315644CCF924F148E2BF178E163ADAFBE22AF34AF9E2435ADA28C3051267CBCD9A55CE5CFEE335954DC98010AB043A96FB276D8A3201950D973C518F3765C95FC910996F9D64C9576B18141EEEB6E5AE047700F653355FBA4E4EF1E3E293E07717D8B8169BA9026126922ACE828E575B911D8160DC25EAE441889DB93A1F1835FFFA3BBEA6F444403E9AF759633CAF06C41CB943C652D71D8BE03C81FAE57BEAAADEA8AF37CB3CE9700DF387C5D79ABB5D7743F9D3E9F26893E839764D5A1C3DD2753E39CD22CEF468A250BFBB1D3352596EE495AC3601B653A87D3645B1174C15D5DF314C5567085F1A814FCC396B8C3E8470DA0D72F785DCC69CDD9F3CC8DE9D5E3D49ED5212A95F1DC9A1BFE07EE757810ACE18A11286BE6FFB0F7EF960F21A014063552622CB8D6D9AC1DCA9EC4D48BA409EE185F84798BF040079B28468D5CEB842A530794B030C731B0A760FCADD852D54DD9AFCBF84097EC5F232AA780BCC1336AC219D797FC1B9A081428E466790DEAAF8017E9B5FDF1529F52BA0048F7C34E96118A419B0BDF4209EE78165BB3F72FA790D09AD153C509C3D6B19A9DC250993BB101A060176D94C6F74E2A84151F208EF0A792E47A793C1EEC0BE492B47BE677EF5044DFAD725F0A9440B62F57DFD6C384AA79E42356BD3BCBA113DB8D6510086F7CA7BD78F12E5B42440B1B4EE3985198B7A770BD76408CCB29FC1EA899DB892AC08FBDBF77C41D730A07117413C676425B1E94C02F8DA12138C44904F6D261CCDAB0A9859A3281CD0EA393BE08776439E450936A0C5650CD7265B7947DCA7BEF2752DB3A16332E35E7961D057BE1E672BA023D442DACF3CE90C6CACF55CBEC7CB6BCB3E2646B3F2E886
F923C7321FAB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/AnonymicePowerline cguidfix
/F1.1/AnonymicePowerline renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 582 731 rc
0 731 m
582 731 l
582 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-970.52631 1403.6316 m
1551.579 1403.6316 l
1551.579 -672.1579 l
-970.52631 -672.1579 l
h
-970.52631 1403.6316 m
f
1 730 m
570 730 l
570 1 l
1 1 l
h
1 730 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
155 23 m
724 23 l
724 752 l
155 752 l
h
155 23 m
S
0 i
0.75 0.75 1 sc
CM
15 217 m
160 217 l
160 19 l
15 19 l
h
15 217 m
f
3 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
169 536 m
314 536 l
314 734 l
169 734 l
h
169 536 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 87.5 118 cm
/F1.1[ 16 0 0 -16 0 0]sf
-56.773438 6.5 m
(!"#$%&'\(\)%&*+)[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
1 0.75 0.75 sc
CM
15 711 m
556 711 l
556 337.7417 l
15 337.7417 l
h
15 711 m
f
2 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
169 42 m
710 42 l
710 415.2583 l
169 415.2583 l
h
169 42 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 467 369.71402 cm
-78.609375 6.5 m
(,-*./'0\(1'\(#2*342*)[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
254 380.86716 m
369 380.86716 l
369 308 l
254 308 l
h
254 380.86716 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
408 372.13284 m
523 372.13284 l
523 445 l
408 445 l
h
408 372.13284 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 311.5 344.43359 cm
-26.203125 6.5 m
(56#7'0)[ 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
1 1 0.75 sc
CM
311.5 240 m
362.5 189 l
311.5 138 l
260.5 189 l
h
311.5 240 m
f
1 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
465.5 513 m
516.5 564 l
465.5 615 l
414.5 564 l
h
465.5 513 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 311.5 189 cm
/F1.1[ 11 0 0 -11 0 0]sf
-32.006855 3.48 m
(182'&1"&#'.)[ 6.004883 6.004883 6.004883 6.004883 6.004883 6.004883 6.004883 6.004883 6.004883 6.004883 0.000000 ] xS
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -154 753 cm
461.21613 621.8941 m
455.09689 661.24066 440.36426 708.10333 405.03491 719.30145 c
378.05652 727.85266 344.46085 713.89752 314.75 695.02649 c
S
0 i
CM
308.32785 139.02649 m
304.245 131.52113 l
310.18677 130.68716 l
h
308.32785 139.02649 m
f
0 J
0 j
1 0 0 -1 -154 753 cm
462.32785 613.97351 m
458.245 621.47888 l
464.18677 622.31287 l
h
462.32785 613.97351 m
S
1 J
1 j
0.60000002 i
465.5 455.39999 m
465.5 513 l
S
0 i
CM
311.5 305.60001 m
308.5 297.60001 l
314.5 297.60001 l
h
311.5 305.60001 m
f
0 J
0 j
1 0 0 -1 -154 753 cm
465.5 447.39999 m
462.5 455.39999 l
468.5 455.39999 l
h
465.5 447.39999 m
S
0.5 1 0.5 sc
CM
245 497 m
378 497 l
378 424.13284 l
245 424.13284 l
h
245 497 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
399 256 m
532 256 l
532 328.86716 l
399 328.86716 l
h
399 256 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 311.5 460.56641 cm
/F1.1[ 16 0 0 -16 0 0]sf
-56.773438 6.5 m
(!"&"4'099&61')[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
29 692.81165 m
144 692.81165 l
144 619.94452 l
29 619.94452 l
h
29 692.81165 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
183 60.188347 m
298 60.188347 l
298 133.05551 l
183 133.05551 l
h
183 60.188347 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 86.5 656.37805 cm
-48.039062 6.5 m
(.-":'99&61')[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
155 692.81165 m
270 692.81165 l
270 619.94452 l
155 619.94452 l
h
155 692.81165 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
309 60.188347 m
424 60.188347 l
424 133.05551 l
309 133.05551 l
h
309 60.188347 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 212.5 656.37805 cm
-48.039062 6.5 m
(.-":'99&61')[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
281 692.81165 m
396 692.81165 l
396 619.94452 l
281 619.94452 l
h
281 692.81165 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
435 60.188347 m
550 60.188347 l
550 133.05551 l
435 133.05551 l
h
435 60.188347 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 338.5 656.37805 cm
-48.039062 6.5 m
(.-":'99&61')[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
/Cs2 SC
0.75 1 0.75 sc
CM
407 692.81165 m
522 692.81165 l
522 619.94452 l
407 619.94452 l
h
407 692.81165 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
561 60.188347 m
676 60.188347 l
676 133.05551 l
561 133.05551 l
h
561 60.188347 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 464.5 656.37805 cm
-48.039062 6.5 m
(.-":'99&61')[ 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 8.734375 0.000000 ] xS
1 w
[
1
3
] 0 d
0.60000002 i
/Cs2 SC
0 0 0 sc
1 0 0 -1 -154 753 cm
415.59302 249.00082 m
290.40698 140.05469 l
S
0 J
0 j
[] 0 d
0 i
284.37228 134.80283 m
288.43756 142.31772 l
292.37643 137.79167 l
h
284.37228 134.80283 m
S
421.62772 254.25269 m
417.56244 246.73779 l
413.62357 251.26384 l
h
421.62772 254.25269 m
S
1 J
1 j
[
1
3
] 0 d
0.60000002 i
442.35995 246.66501 m
389.64005 142.3905 l
S
0 J
0 j
[] 0 d
0 i
386.03046 135.25111 m
386.96277 143.74409 l
392.31732 141.03691 l
h
386.03046 135.25111 m
S
445.96954 253.8044 m
445.03723 245.31142 l
439.68268 248.0186 l
h
445.96954 253.8044 m
S
1 J
1 j
[
1
3
] 0 d
0.60000002 i
471.94498 245.69279 m
486.05502 143.36272 l
S
0 J
0 j
[] 0 d
0 i
487.1478 135.4377 m
483.08313 142.95293 l
489.02692 143.77251 l
h
487.1478 135.4377 m
S
470.8522 253.61781 m
474.91687 246.10258 l
468.97308 245.283 l
h
470.8522 253.61781 m
S
1 J
1 j
[
1
3
] 0 d
0.60000002 i
500.45395 247.69899 m
583.54602 141.35652 l
S
0 J
0 j
[] 0 d
0 i
588.47162 135.05267 m
581.18207 139.50941 l
585.90997 143.20361 l
h
588.47162 135.05267 m
S
495.52835 254.00284 m
502.8179 249.54608 l
498.09003 245.85188 l
h
495.52835 254.00284 m
S
1 J
1 j
0.60000002 i
465.5 339.26715 m
465.5 361.73285 l
S
0 J
0 j
0 i
465.5 369.73285 m
468.5 361.73285 l
462.5 361.73285 l
h
465.5 369.73285 m
S
465.5 331.26715 m
462.5 339.26715 l
468.5 339.26715 l
h
465.5 331.26715 m
S
1 1 0.75 sc
CM
200.49449 570.17163 m
213.49449 557.17163 l
200.49449 544.17163 l
187.49449 557.17163 l
h
200.49449 570.17163 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
354.49451 182.82838 m
367.49451 195.82838 l
354.49451 208.82838 l
341.49451 195.82838 l
h
354.49451 182.82838 m
S
0 i
1 1 0.75 sc
CM
261.50662 572.44812 m
274.50662 559.44812 l
261.50662 546.44812 l
248.50662 559.44812 l
h
261.50662 572.44812 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
415.50662 180.55191 m
428.50662 193.55191 l
415.50662 206.55191 l
402.50662 193.55191 l
h
415.50662 180.55191 m
S
0 i
1 1 0.75 sc
CM
325.58389 575.70691 m
338.58389 562.70691 l
325.58389 549.70691 l
312.58389 562.70691 l
h
325.58389 575.70691 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
479.58389 177.29309 m
492.58389 190.29309 l
479.58389 203.29309 l
466.58389 190.29309 l
h
479.58389 177.29309 m
S
0 i
1 1 0.75 sc
CM
392.72705 577.52197 m
405.72705 564.52197 l
392.72705 551.52197 l
379.72705 564.52197 l
h
392.72705 577.52197 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -154 753 cm
546.72705 175.47801 m
559.72705 188.47801 l
546.72705 201.47801 l
533.72705 188.47801 l
h
546.72705 175.47801 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 442 88 cm
/F1.1[ 15 0 0 -15 0 0]sf
-102.35596 -30 m
(;<\(=>'&:6%.\(*&\(?%#$%'0\(1'\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-114.63867 -12 m
(#6&?%4*0"/%6&\(":'#\(/6*/'\(-'.\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-126.92139 6 m
(182'&1"&#'.\('/\(-'.\("22-%#"/%6&.\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-122.82715 24 m
(@*'\(A'\(.6*$"%/'\(B'//0'\(1"&.\(*&\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-36.848145 42 m
(#6&/'&'*0\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
1 0 0 -1 126 418.59076 cm
-85.979004 -39 m
(C<\(56#7'0\(:"\(#08'0\(*&\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-94.16748 -21 m
('&.'BD-'\(1'\(&\(%&./"&#'.\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-45.036621 -3 m
(.*%:"&/\(-'.\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-85.979004 15 m
(.28#%?%#"/%6&.\(1'\(B6&\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-40.942383 33 m
(?%#$%'0\(1'\()[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
-57.319336 51 m
(#6&?%4*0"/%6&.)[ 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 8.188477 0.000000 ] xS
1 0 0 -1 467.5 474.51978 cm
/F1.1[ 14 0 0 -14 0 0]sf
-57.319336 -54 m
(E<\(\)>"-460%/$B'\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-57.319336 -37 m
(1>"220'&/%.."4'\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-49.676758 -20 m
(.>'??'#/*'\('&\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-45.855469 -3 m
(*/%-%."&/\(-'\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-64.961914 14 m
(B"&"4'099&61'\(@*%\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-61.140625 31 m
("\(-"\(#"2"#%/8\(1'\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-61.140625 48 m
(480'0\(-'.\(&6'*1.\()[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
-30.570312 65 m
('.#-":'.)[ 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 7.642578 0.000000 ] xS
ep
end
%%Trailer
%%EOF
